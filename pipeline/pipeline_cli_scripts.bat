REM run_pipeline_cli.bat - Script avanzado para ejecutar el CLI
@echo off
setlocal enabledelayedexpansion

echo ==========================================
echo    STRIX PORTFOLIO PIPELINE CLI
echo ==========================================

REM Verificar directorio
if not exist "venv" (
    echo ‚ùå Error: Ejecutar desde la raiz del proyecto
    pause
    exit /b 1
)

REM Activar entorno virtual
call venv\Scripts\activate.bat

REM Navegar a pipeline
cd pipeline

REM Ejemplos de uso
echo üîß EJEMPLOS DE USO:
echo.
echo 1. Procesamiento b√°sico:
echo    python main.py
echo.
echo 2. √öltimos 7 d√≠as con modo paralelo:
echo    python main.py --days 7 --mode parallel
echo.
echo 3. Fechas espec√≠ficas con detalles:
echo    python main.py --start 2025-04-30 --end 2025-05-01 --verbose
echo.
echo 4. Solo eventos de hoy:
echo    python main.py --today
echo.
echo 5. Simulaci√≥n (dry-run):
echo    python main.py --dry-run --verbose
echo.
echo 6. Ver configuraci√≥n del sistema:
echo    python main.py --show-config
echo.
echo 7. Listar portfolios activos:
echo    python main.py --list-portfolios
echo.
echo 8. Procesar portfolios espec√≠ficos:
echo    python main.py --portfolio-ids 1,2,3
echo.

REM Preguntar al usuario qu√© hacer
echo ¬øQu√© deseas hacer?
echo [1] Ejecutar configuraci√≥n b√°sica (fechas por defecto)
echo [2] Mostrar configuraci√≥n del sistema
echo [3] Listar portfolios activos  
echo [4] Ejecutar con √∫ltimos 7 d√≠as (modo paralelo)
echo [5] Simulaci√≥n (dry-run) con detalles
echo [6] Ingreso manual de comando
echo [Q] Salir
echo.
set /p choice="Selecciona una opci√≥n [1-6,Q]: "

if /i "%choice%"=="Q" goto :end
if "%choice%"=="1" (
    echo üöÄ Ejecutando configuraci√≥n b√°sica...
    python main_cli.py
) else if "%choice%"=="2" (
    echo üîß Mostrando configuraci√≥n del sistema...
    python main_cli.py --show-config
) else if "%choice%"=="3" (
    echo üìÅ Listando portfolios activos...
    python main_cli.py --list-portfolios
) else if "%choice%"=="4" (
    echo üöÄ Ejecutando √∫ltimos 7 d√≠as con modo paralelo...
    python main_cli.py --days 7 --mode parallel --verbose
) else if "%choice%"=="5" (
    echo üß™ Ejecutando simulaci√≥n con detalles...
    python main_cli.py --dry-run --verbose
) else if "%choice%"=="6" (
    echo üíª Ingresa tu comando personalizado:
    echo Ejemplo: --start 2025-04-30 --end 2025-05-01 --mode parallel --verbose
    set /p custom_args="Argumentos: "
    echo üöÄ Ejecutando: python main.py !custom_args!
    python main_cli.py !custom_args!
) else (
    echo ‚ùå Opci√≥n inv√°lida
    goto :end
)

REM Capturar resultado
set EXIT_CODE=%ERRORLEVEL%

:end
cd ..
echo.
echo ==========================================
if %EXIT_CODE% == 0 (
    echo ‚úÖ OPERACI√ìN COMPLETADA
) else (
    echo ‚ùå OPERACI√ìN FALL√ì
)
echo ==========================================
pause
exit /b %EXIT_CODE%

REM ==================================================
REM pipeline_help.bat - Muestra ayuda completa
REM ==================================================

REM @echo off
REM echo ==========================================
REM echo    STRIX PIPELINE - AYUDA COMPLETA
REM echo ==========================================
REM 
REM call venv\Scripts\activate.bat
REM cd pipeline
REM python main.py --help
REM cd ..
REM pause

REM ==================================================
REM quick_run.bat - Ejecuci√≥n r√°pida con par√°metros comunes
REM ==================================================

REM @echo off
REM call venv\Scripts\activate.bat
REM cd pipeline
REM 
REM REM Configuraci√≥n r√°pida - modifica seg√∫n necesites
REM python main.py --days 1 --mode parallel --verbose
REM 
REM set EXIT_CODE=%ERRORLEVEL%
REM cd ..
REM 
REM if %EXIT_CODE% == 0 (
REM     echo ‚úÖ Pipeline completado exitosamente
REM ) else (
REM     echo ‚ùå Pipeline fall√≥
REM )
REM pause
